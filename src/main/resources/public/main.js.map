{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/calculator/calculator.component.css","webpack:///./src/app/calculator/calculator.component.html","webpack:///./src/app/calculator/calculator.component.ts","webpack:///./src/app/calculator/countrydata.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-calculator></app-calculator>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\nimport {MatRadioModule} from '@angular/material/radio';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\nimport { AppComponent } from './app.component';\nimport { CalculatorComponent } from './calculator/calculator.component';\n\nimport { HttpClientModule }    from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalculatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MatRadioModule,\n    BrowserAnimationsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".country-radio-group {\\n  display: inline-flex;\\n  flex-direction: column;\\n}\\n\\n.country-radio-button {\\n  margin-top: 15px;\\n}\\n\\n.country-selected-value {\\n  margin: 15px 0;\\n}\\n\\n.errors {\\n\\n  color: red\\n\\n}\\n\\n.calccontent {\\n\\n  margin-left: 50px;\\n\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class = \\\"calccontent\\\">\\n\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to Income Calculator !\\n  </h1>\\n</div>\\n<h2>Calculate your monthly income net in PLN: </h2>\\n\\n<div>\\n  <label>Daily income gross:\\n    <input type=\\\"number\\\"[(ngModel)]=\\\"input.value\\\" placeholder=\\\"0\\\">\\n  </label>\\n  <!-- <span>\\n    {{currency}}\\n  </span> -->\\n</div>\\n\\n<div>\\n\\n  <mat-radio-group class=\\\"country-radio-group\\\" [(ngModel)]=\\\"input.country\\\">\\n    <mat-radio-button class=\\\"country-radio-button\\\" *ngFor=\\\"let c of availableCountries\\\" [value]=\\\"c\\\"  (change)=\\\"radioChange($event)\\\">\\n      {{c}}\\n    </mat-radio-button>\\n  </mat-radio-group>\\n\\n  <div class=\\\"country-selected-value\\\">{{info}}</div>\\n\\n  <button (click)=\\\"calculate()\\\">Calculate !</button>\\n\\n</div>\\n\\n\\n<div class = \\\"errors\\\">\\n\\n  <h3>{{error}}</h3>\\n\\n</div>\\n\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Input } from './input';\nimport { RestResponse } from './restresponse';\nimport { CountryData } from './countrydata';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.css']\n})\nexport class CalculatorComponent implements OnInit {\n\n  private url = 'http://localhost:8080/calculate';\n\n  map = new Map()\n  .set(\"PL\", new CountryData(\"Poland\", \"PLN\"))\n  .set(\"DE\", new CountryData(\"German\", \"EUR\"))\n  .set(\"UK\", new CountryData(\"United Kingdom\", \"GBP\"));\n\n\n  errorMap = new Map()\n  .set(\"INVALID_INCOME_VALUE\", \"Invalid income value: \")\n  .set(\"INVALID_INCOME_FORMAT\", \"Invalid income format: \")\n  .set(\"COUNTRY_NOT_SUPPORTED\", \"Country not supported: \")\n  .set(\"FORM_CANNOT_BE_NULL\", \"Form cannot be \")\n  .set(\"COUNTRY_CANNOT_BE_NULL\", \"Country cannot be \")\n  .set(\"INCOME_CANNOT_BE_NULL\", \"Income cannot be \")\n  \n\n  input: Input = {\n    country: 'PL',\n    value: 0\n  };\n\n  result = 0;\n\n  availableCountries: string[] = ['PL', 'DE', 'UK'];\n\n  info = \"\";\n\n  error = \"\";\n\n  currency = this.map.get(this.input.country).currency\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  calculate() {\n\n    this.info = \"Calculating...\"\n\n    let params = new HttpParams();\n    \n    params = params.append('country', this.input.country);\n    params = params.append('dailyRateGross', String(this.input.value));\n\n    this.http.get<RestResponse>(this.url, {params: params})\n    .subscribe(\n      response => this.updateResult(response), \n      error => this.updateError(error)\n    );\n\n  }\n\n  updateResult(restResponse: RestResponse) {\n    this.error = \"\"\n    this.result = restResponse.income;\n    this.info = \"You work in \" +  this.map.get(this.input.country).label + \" and your monthly income net is \" + this.result + \" PLN.\";\n  }\n\n  updateError(error: any) {\n    this.error = this.errorMap.get(error.error.errorReason) + error.error.message\n    this.info = \"Error !\"\n  }\n\n\n\n}\n","export class CountryData {\n\n    label: string;\n    currency: string;\n\n    constructor(label: string, currency: string) {\n        this.label = label;\n        this.currency = currency;\n    }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}